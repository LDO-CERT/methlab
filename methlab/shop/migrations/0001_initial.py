# Generated by Django 3.0.5 on 2020-06-17 09:56

import colorfield.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.EmailField(blank=True, max_length=254, null=True)),
                ('whitelist', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Flag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', max_length=18)),
                ('visible', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='InternalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('imap_server', models.CharField(max_length=200)),
                ('imap_username', models.CharField(max_length=200)),
                ('imap_password', models.CharField(max_length=200)),
                ('imap_folder', models.CharField(max_length=200)),
                ('cortex_url', models.CharField(max_length=200)),
                ('cortex_api', models.CharField(max_length=200)),
                ('server_list', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('vip_list', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('vip_domain', models.CharField(max_length=200)),
                ('mimetype_whitelist', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('security_emails', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.EmailField(max_length=254), blank=True, null=True, size=None)),
                ('honeypot_emails', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.EmailField(max_length=254), blank=True, null=True, size=None)),
                ('internal_domains', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, null=True, size=None)),
                ('http_proxy', models.CharField(blank=True, max_length=200, null=True)),
                ('https_proxy', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(max_length=200)),
                ('subject', models.CharField(max_length=500)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('received', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('headers', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('defects', models.TextField(blank=True, null=True)),
                ('defects_categories', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('text_plain', models.TextField(blank=True, null=True)),
                ('text_not_managed', models.TextField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('body_plain', models.TextField(blank=True, null=True)),
                ('sender_ip_address', models.CharField(blank=True, max_length=50, null=True)),
                ('to_domains', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, null=True, size=None)),
                ('addresses_bcc', models.ManyToManyField(related_name='addresses_bcc', to='shop.Address')),
                ('addresses_cc', models.ManyToManyField(related_name='addresses_cc', to='shop.Address')),
                ('addresses_from', models.ManyToManyField(related_name='addresses_from', to='shop.Address')),
                ('addresses_to', models.ManyToManyField(related_name='addresses_to', to='shop.Address')),
            ],
        ),
        migrations.CreateModel(
            name='Mail_Flag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, null=True)),
                ('flag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Flag')),
                ('mail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Mail')),
            ],
        ),
        migrations.AddField(
            model_name='mail',
            name='flags',
            field=models.ManyToManyField(related_name='flags', through='shop.Mail_Flag', to='shop.Flag'),
        ),
        migrations.AddField(
            model_name='mail',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Mail'),
        ),
        migrations.AddField(
            model_name='mail',
            name='reply_to',
            field=models.ManyToManyField(related_name='reply_to', to='shop.Address'),
        ),
        migrations.AddField(
            model_name='mail',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binary', models.BooleanField()),
                ('charset', models.CharField(blank=True, max_length=200, null=True)),
                ('content_transfer_encoding', models.CharField(blank=True, max_length=200, null=True)),
                ('content_disposition', models.TextField(blank=True, null=True)),
                ('content_id', models.CharField(blank=True, max_length=200, null=True)),
                ('filename', models.FileField(blank=True, null=True, upload_to='uploads/')),
                ('mail_content_type', models.CharField(blank=True, max_length=200, null=True)),
                ('payload', models.TextField(blank=True, null=True)),
                ('mail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.Mail')),
            ],
        ),
    ]
